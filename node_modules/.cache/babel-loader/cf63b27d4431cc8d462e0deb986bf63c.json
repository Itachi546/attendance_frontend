{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\DBMS_PROJECT\\\\dbms-frontend\\\\src\\\\components\\\\pages\\\\Report.js\";\nimport React, { Component } from 'react';\nimport { url } from '../../config';\nimport Table from 'react-bootstrap/Table';\nexport default class Report extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      header: [],\n      data: []\n    };\n\n    this.renderTableHeader = cols => {\n      return cols.map((val, index) => {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, val);\n      });\n    };\n\n    this.renderTableData = (data, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, data.map((val, i) => React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, val)));\n    };\n  }\n\n  //@NOte validation between original data and ordered data\n  componentDidMount() {\n    const data = this.props.location.state;\n    const classId = data.class;\n    const subjectCode = data.subjectCode,\n          instructor = data.instructor;\n    fetch(url + \"attendance/all/\".concat(classId, \"/\").concat(subjectCode, \"/\").concat(instructor)).then(res => {\n      return res.json();\n    }).then(json => {\n      const attendance = json[0].date.split(',');\n      this.setState({\n        header: ['Roll', 'Name', ...attendance],\n        data: json.map((val, index) => {\n          const status = val.status.split(',');\n          return [val.rollNo, val.name, ...status];\n        })\n      });\n      return json;\n    }).catch(err => {\n      console.log(err);\n      return err;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"table\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.renderTableHeader(this.state.header)), this.state.data.map((val, index) => {\n      return this.renderTableData(val, index);\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\lenovo\\Desktop\\DBMS_PROJECT\\dbms-frontend\\src\\components\\pages\\Report.js"],"names":["React","Component","url","Table","Report","state","header","data","renderTableHeader","cols","map","val","index","renderTableData","i","componentDidMount","props","location","classId","class","subjectCode","instructor","fetch","then","res","json","attendance","date","split","setState","status","rollNo","name","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { url } from '../../config';\r\nimport Table from 'react-bootstrap/Table';\r\nexport default class Report extends Component {\r\n\r\n    state = {\r\n        header: [],\r\n        data: []\r\n    };\r\n\r\n    //@NOte validation between original data and ordered data\r\n    componentDidMount() {\r\n        const data = this.props.location.state;\r\n        const classId = data.class;\r\n        const {subjectCode, instructor} = data;\r\n        fetch(url + `attendance/all/${classId}/${subjectCode}/${instructor}`)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(json => {\r\n                const attendance = json[0].date.split(',');\r\n                this.setState({\r\n                    header: ['Roll','Name', ...attendance],\r\n                    data: json.map((val, index) => {\r\n                        const status = val.status.split(',');\r\n                        return [val.rollNo, val.name, ...status];\r\n                    })\r\n                })\r\n                return json;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return err;\r\n            });\r\n    }\r\n\r\n    renderTableHeader = (cols) => {\r\n        return cols.map((val, index) => {\r\n            return <th key={index}>{val}</th>\r\n        })\r\n    }\r\n\r\n    renderTableData = (data, index) => {\r\n        return (<tr key={index}>\r\n            {\r\n                data.map((val, i) => (\r\n                <td key={i}>{val}</td>\r\n        ))\r\n        }\r\n        </tr>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table className=\"table\" striped bordered hover responsive=\"lg\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {\r\n                                this.renderTableHeader(this.state.header)\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            this.state.data.map((val, index) => {\r\n                                return this.renderTableData(val, index);\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}