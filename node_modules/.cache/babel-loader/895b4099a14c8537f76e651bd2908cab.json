{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\DBMS_PROJECT\\\\dbms-frontend\\\\src\\\\components\\\\CustomTable.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nexport default class CustomTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTableHeader = header => {\n      return header.map((val, index) => {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }, val.toUpperCase());\n      });\n    };\n\n    this.renderTableData = header => {\n      return this.props.data.map((val, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, header.map((elm, index) => //Date is in isoformat so split from time\n        //<td key={index}>{elm == \"date\" ? val[elm].split('T')[0] : val[elm]}</td>\n        React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, val[elm])));\n      });\n    };\n  }\n\n  render() {\n    if (this.props.data.length === 0) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });else {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"table\",\n        responsive: \"md\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        onClick: evt => {\n          const index = evt.target.parentNode.rowIndex;\n          if (index > 0) this.props.onClickRow(index - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.renderTableHeader(this.props.header)), this.renderTableData(this.props.header))));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\lenovo\\Desktop\\DBMS_PROJECT\\dbms-frontend\\src\\components\\CustomTable.js"],"names":["React","Component","Table","CustomTable","renderTableHeader","header","map","val","index","toUpperCase","renderTableData","props","data","elm","render","length","evt","target","parentNode","rowIndex","onClickRow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAE/CG,iBAF+C,GAE1BC,MAAD,IAAY;AAC5B,aAAOA,MAAM,CAACC,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACH,OAFM,CAAP;AAGH,KAN8C;;AAAA,SAQ/CC,eAR+C,GAQ5BL,MAAD,IAAY;AAC1B,aAAO,KAAKM,KAAL,CAAWC,IAAX,CAAgBN,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvC,eACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKH,MAAM,CAACC,GAAP,CAAW,CAACO,GAAD,EAAML,KAAN,KACR;AACA;AACA;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,GAAG,CAACM,GAAD,CAApB,CAHH,CADL,CADJ;AASH,OAVM,CAAP;AAWH,KApB8C;AAAA;;AAsB/CC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,MAAhB,KAA2B,CAA/B,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADJ,KAEK;AACD,aACQ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,UAAU,EAAC,IAApC;AAAyC,QAAA,OAAO,MAAhD;AAAiD,QAAA,QAAQ,MAAzD;AAA0D,QAAA,KAAK,MAA/D;AAAgE,QAAA,OAAO,EAAGC,GAAD,IAAS;AAC9E,gBAAMR,KAAK,GAAGQ,GAAG,CAACC,MAAJ,CAAWC,UAAX,CAAsBC,QAApC;AACA,cAAIX,KAAK,GAAG,CAAZ,EACI,KAAKG,KAAL,CAAWS,UAAX,CAAsBZ,KAAK,GAAG,CAA9B;AACP,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKJ,iBAAL,CAAuB,KAAKO,KAAL,CAAWN,MAAlC,CAAL,CADJ,EAGQ,KAAKK,eAAL,CAAqB,KAAKC,KAAL,CAAWN,MAAhC,CAHR,CALJ,CADA,CADR;AAgBH;AACJ;;AA3C8C","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nexport default class CustomTable extends Component {\r\n   \r\n    renderTableHeader = (header) => {\r\n        return header.map((val, index) => {\r\n            return <th key={index}>{val.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    renderTableData = (header) => {\r\n        return this.props.data.map((val, index) => {\r\n            return (\r\n                <tr key={index} >\r\n                    {header.map((elm, index) => (\r\n                        //Date is in isoformat so split from time\r\n                        //<td key={index}>{elm == \"date\" ? val[elm].split('T')[0] : val[elm]}</td>\r\n                        <td key={index}>{val[elm]}</td>\r\n                    ))}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data.length === 0)\r\n            return <div></div>\r\n        else {\r\n            return (\r\n                    <div className=\"container-fluid\">\r\n                    <Table className=\"table\" responsive=\"md\" striped bordered hover onClick={(evt) => {\r\n                        const index = evt.target.parentNode.rowIndex;\r\n                        if (index > 0)\r\n                            this.props.onClickRow(index - 1);\r\n                    }}>\r\n                        <tbody>\r\n                            <tr>{this.renderTableHeader(this.props.header)}</tr>\r\n                            {\r\n                                this.renderTableData(this.props.header)\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}